[project]
name = "pysparkplug"
description = "An open-source, Python implementation of Sparkplug B, an MQTT topic and payload definition standard"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "Apache License, Version 2.0"}
keywords = ["mqtt", "sparkplug", "manufacturing", "automation"]
authors = [{ name = "Matt Fay", email = "matt.e.fay@gmail.com" }]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Manufacturing",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: Implementation :: CPython",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
    "paho-mqtt<2",
    "protobuf>=5.28.2",
    "typing-extensions>=4.12.2 ; python_full_version < '3.11'",
]

[project.urls]
Documentation = "https://pysparkplug.mattefay.com"
Changelog = "https://pysparkplug.mattefay.com/en/stable/changelog.html"
Source = "https://github.com/matteosox/pysparkplug"
"Bug Report" = "https://github.com/matteosox/pysparkplug/issues/new/choose"
"Feature Request" = "https://github.com/matteosox/pysparkplug/issues/new/choose"

[dependency-groups]
dev = [
    "check-wheel-contents>=0.6.1",
    "coverage>=7.6.10",
    "furo>=2024.8.6",
    "myst-parser>=3.0.1",
    "numpy>=2.0.2",
    "packaging>=24.2",
    "pygithub>=2.5.0",
    "pyright>=1.1.391",
    "pytest>=8.3.4",
    "pytest-subtests>=0.14.1",
    "ruff>=0.8.5",
    "sphinx>=7.4.7",
    "sphinx-copybutton>=0.5.2",
    "sphinx-notfound-page>=1.0.4",
    "sphinxext-opengraph>=0.9.1",
    "twine>=6.0.1",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" }

[tool.hatch.build.hooks.vcs]
version-file = "src/pysparkplug/_version.py"

[tool.ruff]
extend-exclude = ["*_pb2.py"]

[tool.ruff.lint]
extend-select = ["I", "PL", "RUF"]
ignore = ["PLR0913", "PLR2004"]

[tool.pyright]
include = [
    "src",
    "test/unit_tests",
    "docs",
    "scripts",
]
exclude = ["**/*_pb2.py"]
reportUnnecessaryTypeIgnoreComment = true
reportMissingParameterType = true

[tool.pytest.ini_options]
addopts = "-rA --verbose --color=yes"

[tool.coverage.run]
branch = true
parallel = true
omit = ["*_pb2.py"]
source = ["pysparkplug"]

[tool.coverage.report]
show_missing = true
fail_under = 65
exclude_also = [
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
]

[tool.check-wheel-contents]
toplevel = "pysparkplug"
package = "src/pysparkplug"
