name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  main:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Test
        run: just test

      - name: Publish Draft Release
        if: ${{ github.ref == 'refs/heads/main' }}
        run: just draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to TestPyPI
        if: ${{ github.ref == 'refs/heads/main' }}
        run: just repository=testpypi publish

  os_compatibility:
    runs-on: ${{ matrix.os }}
    name: "OS: ${{ matrix.os }}"
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    permissions:
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: |
            3.9
            3.10
            3.11
            3.12
            3.13

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Coverage
        run: just coverage

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          env_vars: OS
          fail_ci_if_error: true
          verbose: true
          use_oidc: true
